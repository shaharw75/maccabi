{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\maccabi\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport socketClient from \"socket.io-client\";\nimport { Chat } from './chat/Chat';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\nconst SERVER = \"http://127.0.0.1:8080\";\n\nconst App = () => {\n  var socket = socketClient(SERVER);\n  socket.on('connection', () => {\n    console.log(`I'm connected with the back-end`);\n  });\n\n  const handleLogin = () => {\n    const userName = $(\"#userName\").val();\n    const password = $(\"#password\").val();\n    fetch(SERVER + '/login?userName=' + userName + \"&password=\" + password).then(async response => {\n      let data = await response.json();\n      if (data.message === true) window.location.href = '/chat/chat';else alert(\"FAILED LOGIN\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Please Login:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), \"UserName: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"userName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chat/chat/\",\n        exact: true,\n        component: BurgerBuilder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nconst Test = () => {\n  fetch(SERVER + '/getUsers').then(async response => {\n    let data = await response.json();\n    alert(data.message);\n  });\n};\n\n_c2 = Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["D:/www/maccabi/client/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","NavLink","Redirect","socketClient","Chat","$","window","jQuery","global","SERVER","App","socket","on","console","log","handleLogin","userName","val","password","fetch","then","response","data","json","message","location","href","alert","BurgerBuilder","Test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,QANF,QAOO,kBAPP;AAQA,OAAO,WAAP;AACA,OAAOC,YAAP,MAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AACAC,MAAM,CAACC,MAAP,GAAgBF,CAAhB;AACAC,MAAM,CAACD,CAAP,GAAWA,CAAX;AACAG,MAAM,CAACD,MAAP,GAAgBF,CAAhB;AAEA,MAAMI,MAAM,GAAG,uBAAf;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEd,MAAIC,MAAM,GAAGR,YAAY,CAAEM,MAAF,CAAzB;AAEAE,EAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAa,iCAAb;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AAExB,UAAMC,QAAQ,GAAGX,CAAC,CAAC,WAAD,CAAD,CAAeY,GAAf,EAAjB;AACA,UAAMC,QAAQ,GAAGb,CAAC,CAAC,WAAD,CAAD,CAAeY,GAAf,EAAjB;AACAE,IAAAA,KAAK,CAACV,MAAM,GAAG,kBAAT,GAA8BO,QAA9B,GAAyC,YAAzC,GAAwDE,QAAzD,CAAL,CAAwEE,IAAxE,CAA6E,MAAMC,QAAN,IAAkB;AAC7F,UAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAjB;AACE,UAAID,IAAI,CAACE,OAAL,KAAiB,IAArB,EACElB,MAAM,CAACmB,QAAP,CAAgBC,IAAhB,GAAuB,YAAvB,CADF,KAGEC,KAAK,CAAC,cAAD,CAAL;AACL,KAND;AAQD,GAZD;;AAcA,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,6BAIY;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJZ,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,6BAMY;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YANZ,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAOO;AAAA;AAAA;AAAA;AAAA,YAPP,eAQE;AAAQ,MAAA,OAAO,EAAEZ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAEa;AAA3C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBC,CAzCL;;KAAMlB,G;AA2CN,eAAeA,GAAf;;AAGA,MAAMmB,IAAI,GAAG,MAAM;AACjBV,EAAAA,KAAK,CAACV,MAAM,GAAG,WAAV,CAAL,CAA4BW,IAA5B,CAAiC,MAAMC,QAAN,IAAkB;AACjD,QAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAjB;AACCI,IAAAA,KAAK,CAACL,IAAI,CAACE,OAAN,CAAL;AACF,GAHD;AAID,CALD;;MAAMK,I","sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport socketClient  from \"socket.io-client\";\nimport { Chat } from './chat/Chat';\nimport $ from 'jquery'\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nconst SERVER = \"http://127.0.0.1:8080\";\n\nconst App = () => {\n\n    var socket = socketClient (SERVER);\n\n    socket.on('connection', () => {\n      console.log(`I'm connected with the back-end`);\n    });\n    \n    const handleLogin = () => {\n\n      const userName = $(\"#userName\").val();\n      const password = $(\"#password\").val();\n      fetch(SERVER + '/login?userName=' + userName + \"&password=\" + password).then(async response => {\n        let data = await response.json();\n          if (data.message === true)\n            window.location.href = '/chat/chat';\n          else\n            alert(\"FAILED LOGIN\");\n      })\n\n    }\n\n    return (\n\n        <div className=\"App\">\n          \n          <b>Please Login:</b>\n          <br/>\n          UserName: <input type=\"text\" id=\"userName\" />\n          <br/>\n          Password: <input type=\"text\" id=\"password\" />\n          <br/><br/>\n          <button onClick={handleLogin}>LOGIN</button>\n          <Router/>\n          <Switch>\n          <Route path=\"/chat/chat/\" exact component={BurgerBuilder}></Route>\n          </Switch>\n        </div>\n        \n    );\n\n    }\n\nexport default App;\n\n\nconst Test = () => {\n  fetch(SERVER + '/getUsers').then(async response => {\n    let data = await response.json();\n     alert(data.message);\n  })\n}"]},"metadata":{},"sourceType":"module"}